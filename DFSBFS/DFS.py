'''
DFS(Depth-First Search)에는 스택 자료구조(or 재귀 함수를 이용)하며, 구체적인 동작 과정은 다음과 같습니다.

1. 탐색 시작 노드를 스택에 삽입하여 방문 처리를 합니다.
2. 스택의 최상단 노드에 방문하지 않은 인접한 노드가 "하나라도" 있으면 그 노드를 스택에 넣고 방문 처리합니다. 방문하지 않은 인접 노드가 없으면 스택에서 최상단 노드를 꺼냅니다.
3. 더 이상 2번의 과정을 수행할 수 없을 때까지 반복합니다.
'''

# 재귀 함수로 DFS 구현
def dfs(graph, v, visited):
    # 현재 노드를 방문 처리
    visited[v] = True
    print(v, end = ' ')

    # 현재 노드와 연결된 다른 노드를 재귀적으로 방문
    for i in graph[v]:
        if not visited[i]:  # visited[i] == 미방문이면
            dfs(graph, i, visited)  # i를 시작 노드로 재귀


# 각 노드가 연결된 정보를 2차원 리스트로 표현
graph = [
    [],  # index 0은 비워 둠
    [2, 3, 8],  # 노드의 번호를 1번부터 하기 위함
    [1, 7],
    [1, 4, 5],
    [3, 5],
    [3, 4],
    [7],
    [2, 6, 8],
    [1, 7]
]


# 각 노드가 방문된 정보를 1차원 리스트로 표현
# False 값으로 초기화
visited = [False] * (8 + 1)


dfs(graph, 1, visited)